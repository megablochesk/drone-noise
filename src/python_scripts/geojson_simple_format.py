# import geopandas as gpd# import json# # Load the original GeoJSON# geojson_data = gpd.read_file("/Users/georgemccrae/Desktop/drone-noise-collab/src/recourses/data/geo/london_lsoa.geojson")# # Convert the features to the desired format# new_features = []# for feature in geojson_data['features']:#     new_feature = {#         "type": "Feature",#         "geometry": {#             "type": "MultiPolygon",#             "coordinates": [feature["geometry"]["coordinates"]]#         },#         "properties": {#             "id2": feature["properties"]["LSOA11CD"]#         }#     }#     new_features.append(new_feature)# # Create the final GeoJSON structure# new_geojson = {#     "type": "FeatureCollection",#     "features": new_features# }# # Save the new GeoJSON to a file# with open('transformed_lsoa_london.geojson', 'w') as f:#     json.dump(new_geojson, f, indent=4)# print("GeoJSON transformation complete.")# import geopandas as gpd# import json# from shapely.geometry import mapping# # Read the GeoJSON file into a GeoDataFrame# geojson_data = gpd.read_file('/Users/georgemccrae/Desktop/drone-noise-collab/src/recourses/data/geo/london_lsoa.geojson')# # Initialize a dictionary to match your required structure# geojson_output = {#     "type": "FeatureCollection",#     "features": []# }# # Loop through the rows of the GeoDataFrame and extract the geometry and properties# for _, row in geojson_data.iterrows():#     # Create a feature dictionary for each row#     feature = {#         "type": "Feature",#         "geometry": mapping(row['geometry']),  # Convert geometry to GeoJSON format#         "properties": row.drop('geometry').to_dict()  # Get properties as a dictionary#     }    #     # Append the feature to the 'features' list#     geojson_output['features'].append(feature)# # Save the output to a new GeoJSON file# with open('output_geojson_file.geojson', 'w') as f:#     json.dump(geojson_output, f, indent=2)# # If you want to print the output to see it# print(json.dumps(geojson_output, indent=2))import geopandas as gpdimport jsonfrom shapely.geometry import mapping# Read the GeoJSON file into a GeoDataFramegeojson_data = gpd.read_file('/Users/georgemccrae/Desktop/drone-noise-collab/src/recourses/data/geo/london_lsoa.geojson')# Function to convert GeoJSON to new formatdef convert_geojson(data):    geojson = {        "type": "FeatureCollection",        "features": []    }    # Check if 'features' key exists    if 'features' in data:        features = data['features']    else:        # If it's a GeoDataFrame, convert it to GeoJSON format        features = json.loads(data.to_json())['features']    for feature_data in features:        feature = {            "geometry": feature_data['geometry'],            "type": "Feature",            "properties": {                "id2": feature_data['properties']['LSOA11CD']  # Map LSOA11CD to id2            }        }        geojson["features"].append(feature)    return geojson# Convert the input GeoJSON dataconverted_geojson = convert_geojson(geojson_data)# Optionally, write the output to a filewith open('output_converted.geojson', 'w') as f:    json.dump(converted_geojson, f, indent=2)# Print the converted GeoJSON for reviewprint(json.dumps(converted_geojson, indent=2))